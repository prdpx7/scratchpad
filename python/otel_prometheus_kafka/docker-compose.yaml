version: '3.8'

services:
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    ports:
      - "3000:3000" # open http://localhost:3000, default username:password is admin:admin
    volumes:
      - grafana-storage:/var/lib/grafana
    network_mode: host
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090" # prometheus port. when you start grafana locally, make sure to add prometheus host
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    network_mode: host

  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    ports:
      - "4317:4317" # app -> grpc otel receiver
      - "4318:4318" # app -> http otel received
      - "8889:8889" # otel collector server. prometheus will call this endpoint and scrape the metrics
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    network_mode: host

  kafka:
    image: 'bitnami/kafka:latest'
    network_mode: host
    hostname: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@localhost:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092

volumes:
  grafana-storage:
